name: Python CI

on:
  push:
    branches: [ main, master, develop ] # Adjust branches as needed
  pull_request:
    branches: [ main, master, develop ] # Adjust branches as needed

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      shell: bash

    - name: Install dependencies
      run: |
        uv venv --python ${{ matrix.python-version }} .venv
        source .venv/bin/activate
        uv pip install --system --quiet -e .[dev]
      shell: bash

    - name: Lint with Ruff
      run: |
        source .venv/bin/activate
        ruff check .
        ruff format --check .
      shell: bash

    - name: Type check with Mypy
      run: |
        source .venv/bin/activate
        mypy pyqtuidoc tests --exclude pyqtuidoc/fakemods
        # Add 'tests' to mypy path once tests are created
      shell: bash

    - name: Test with Pytest
      run: |
        source .venv/bin/activate
        pytest
        # Placeholder: tests will be added in a later step.
        # For now, this will pass if no tests are found or if basic setup is okay.
      shell: bash

    # Optional: Add a build step to ensure the package can be built
    - name: Build package
      if: matrix.python-version == '3.12' # Only build on one Python version to save time
      run: |
        source .venv/bin/activate
        hatch build
      shell: bash
